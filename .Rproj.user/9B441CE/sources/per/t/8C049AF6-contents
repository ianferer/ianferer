# NHL Faceoff PageRank

# Evolving-Hockey Data Scraper Dependencies

library(RCurl)
library(xml2)
library(rvest)
library(jsonlite)
library(foreach)
library(lubridate)
library(teamcolors)
library(survival)
library(survminer)
library(knitr)
library(gtsummary)
library(kableExtra)
library(MASS)
library(fitdistrplus)
library(pscl)
library(lmtest)
library(ggrepel)
library(igraph)
library(tidyverse)

# Scraping Function

#devtools::source_url("https://raw.githubusercontent.com/evolvingwild/evolving-hockey/master/EH_scrape_functions.R")

pbp.15 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1415_PBP.csv", stringsAsFactors = FALSE)
pbp.16 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1516_PBP.csv", stringsAsFactors = FALSE)
pbp.17 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1617_PBP.csv", stringsAsFactors = FALSE)
pbp.18 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1718_PBP.csv", stringsAsFactors = FALSE)
pbp.19 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1819_PBP.csv", stringsAsFactors = FALSE)
pbp.20 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1920_PBP.csv", stringsAsFactors = FALSE)

faceoff.pct <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/nhl_faceoffs.csv", stringsAsFactors = FALSE)

faceoffs.15 <- subset(pbp.15, event_type == "FAC")
faceoffs.16 <- subset(pbp.16, event_type == "FAC")
faceoffs.17 <- subset(pbp.17, event_type == "FAC")
faceoffs.18 <- subset(pbp.18, event_type == "FAC")
faceoffs.19 <- subset(pbp.19, event_type == "FAC")
faceoffs.20 <- subset(pbp.20, event_type == "FAC")

faceoff.events <- rbind(faceoffs.15, faceoffs.16, faceoffs.17,
                  faceoffs.18, faceoffs.19, faceoffs.20)

faceoff.winner <- ifelse(faceoff.events$event_team == faceoff.events$home_team,
                         faceoff.events$event_player_2,
                         faceoff.events$event_player_1)
faceoff.loser <- ifelse(faceoff.events$event_team == faceoff.events$home_team,
                        faceoff.events$event_player_1,
                        faceoff.events$event_player_2)

faceoff.players <- unique(c(faceoff.winner, faceoff.loser))
n <- length(faceoff.players)

f.count <- rep(0, n)

for (k in 1:length(faceoff.winner)) {
    i <- which(faceoff.players == faceoff.loser[k])
    j <- which(faceoff.players == faceoff.winner[k])
    f.count[i] <- f.count[i] + 1
    f.count[j] <- f.count[j] + 1
}

faceoff.players <- faceoff.players[f.count >= 2000]
n <- length(faceoff.players)

f.cond <- faceoff.winner %in% faceoff.players & faceoff.loser %in% faceoff.players

faceoff.winner <- faceoff.winner[f.cond]
faceoff.loser <- faceoff.loser[f.cond]

g <- data.frame(loser = faceoff.loser, winner = faceoff.winner)
faceoff.graph <- graph.data.frame(g)
p <- page.rank(faceoff.graph)$vector

PR <- p[faceoff.pct$player]
faceoff.pct <- cbind(faceoff.pct, PR)

team.colors <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/team_colors.csv", stringsAsFactors = FALSE)

p.color <- team.colors$color1
s.color <- team.colors$color2
names(p.color) <- team.colors$team
names(s.color) <- team.colors$team

label.text <- as.character(rep(0, nrow(faceoff.pct)))
label.bg <- as.character(rep(0, nrow(faceoff.pct)))

for (i in 1:nrow(faceoff.pct)) {
    label.text[i] <- s.color[faceoff.pct$team[i]]
    label.bg[i] <- p.color[faceoff.pct$team[i]]
}

ggplot(faceoff.pct, aes(x = win.rate, y = PR, color = team, label = player)) +
    geom_point(alpha = 0.3, color = label.bg) +
    geom_label_repel(color = label.text, fill = label.bg, 
                     size = 3, fontface = 'bold', segment.color = "black", max.overlaps = 10) +
    theme_bw() +
    theme(plot.title = element_text(size = 16, hjust = 0.5),
          plot.subtitle = element_text(size = 12, hjust = 0.5),
          axis.title = element_text(size = 14)) +
    labs(x = "Faceoff Win Percentage",
         y = "PageRank",
         title = "Faceoff PageRank",
         subtitle = "2014-15 Through 2019-20",
         caption = "Min. 2000 faceoffs taken")
