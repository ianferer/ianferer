geom_point() +
geom_abline(slope = 1, intercept = 0, size = 1.1) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Mean Score Differential (Start)",
y = "Mean Score Differential (End)",
title = "Change in Score Differential",
subtitle = "2014-15 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
ggplot(subset(backups, svp >= 0.75 & win.rate < 1),
aes(x = mean.dscore.start, y = mean.dscore.end, size = reg.minutes, color = f.appearances, label = goalie)) +
geom_point() +
geom_label_repel(size = 2) +
geom_abline(slope = 1, intercept = 0, size = 1.1) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Mean Score Differential (Start)",
y = "Mean Score Differential (End)",
title = "Change in Score Differential",
subtitle = "2014-15 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
write.csv(all.changes, "C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/all_changes.csv", row.names = FALSE)
write.csv(all.changes.recent, "C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/all_changes_recent.csv", row.names = FALSE)
write.csv(backups, "C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/backups.csv", row.names = FALSE)
write.csv(backups.recent, "C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/backups_recent.csv", row.names = FALSE)
ggplot(subset(backups.recent, svp >= 0.75 & win.rate < 1),
aes(x = svp, y = win.rate, size = reg.minutes, color = f.appearances, label = goalie)) +
geom_point() +
geom_label_repel(size = 2) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Save Percentage",
y = "Winning Percentage",
title = "Relief Performance",
subtitle = "2018-19 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
ggplot(subset(backups.recent, svp >= 0.75 & win.rate < 1),
aes(x = mean.dscore.start, y = mean.dscore.end, size = reg.minutes, color = f.appearances, label = goalie)) +
geom_point() +
geom_label_repel(size = 2) +
geom_abline(slope = 1, intercept = 0, size = 1.1) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Mean Score Differential (Start)",
y = "Mean Score Differential (End)",
title = "Change in Score Differential",
subtitle = "2018-19 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
ggplot(subset(backups, svp >= 0.75 & win.rate < 1),
aes(x = mean.dscore.start, y = mean.dscore.end, size = reg.minutes, color = f.appearances, label = goalie)) +
geom_point() +
geom_label_repel(size = 2) +
geom_abline(slope = 1, intercept = 0, size = 1.1) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Mean Score Differential (Start)",
y = "Mean Score Differential (End)",
title = "Change in Score Differential",
subtitle = "2014-15 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
ggplot(subset(backups, svp >= 0.75 & win.rate < 1),
aes(x = svp, y = win.rate, size = reg.minutes, color = f.appearances, label = goalie)) +
geom_point() +
geom_label_repel(size = 2) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Save Percentage",
y = "Winning Percentage",
title = "Relief Performance",
subtitle = "2014-15 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
# NHL Goalie Changes
# Evolving-Hockey Data Scraper Dependencies
library(RCurl)
library(xml2)
library(rvest)
library(jsonlite)
library(foreach)
library(lubridate)
library(teamcolors)
library(survival)
library(survminer)
library(knitr)
library(gtsummary)
library(kableExtra)
library(MASS)
library(fitdistrplus)
library(pscl)
library(lmtest)
library(ggrepel)
library(tidyverse)
# Scraping Function
devtools::source_url("https://raw.githubusercontent.com/evolvingwild/evolving-hockey/master/EH_scrape_functions.R")
# read in play-by-play data
pbp.14 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/1415_PBP.csv")
pbp.15 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/1516_PBP.csv")
pbp.16 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/1617_PBP.csv")
pbp.17 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/1718_PBP.csv")
pbp.18 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/1819_PBP.csv")
pbp.19 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/1920_PBP.csv")
# read in backup data
all.changes <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/all_changes.csv",
stringsAsFactors = TRUE)
all.changes.recent <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/all_changes_recent.csv",
stringsAsFactors = TRUE)
backups <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/backups.csv",
stringsAsFactors = TRUE)
backups.recent <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Goalie Changes/backups_recent.csv",
stringsAsFactors = TRUE)
backups$f.appearances <- as.factor(backups$f.appearances)
backups.recent$f.appearances <- as.factor(backups.recent$f.appearances)
# # goalie changes algorithm
#
# games <- unique(pbp.19$game_id)    # <-- CHANGE PLAY-BY-PLAY DATA
# n.home <- rep(0, length(games))
# n.away <- rep(0, length(games))
#
# for (i in 1:length(games)) {
#     game.events <- pbp.19[pbp.19$game_id == games[i],]    # <-- CHANGE PLAY-BY-PLAY DATA
#     hg <- as.character(na.omit(game.events$home_goalie))
#     ag <- as.character(na.omit(game.events$away_goalie))
#     n.home[i] <- length(hg[hg != lag(hg, default = "")])
#     n.away[i] <- length(ag[ag != lag(ag, default = "")])
# }
#
# home.ids <- games[which(n.home == 2)]
# away.ids <- games[which(n.away == 2)]
#
# h.team <- as.character(rep(0, length(home.ids)))
# h.starter <- as.character(rep(0, length(home.ids)))
# h.backup <- as.character(rep(0, length(home.ids)))
# start.time <- rep(0, length(home.ids))
# score.start <- rep(0, length(home.ids))
# opp.score.start <- rep(0, length(home.ids))
# backup.shots <- rep(0, length(home.ids))
# backup.goals <- rep(0, length(home.ids))
# svp <- rep(0, length(home.ids))
# score.end <- rep(0, length(home.ids))
# opp.score.end <- rep(0, length(home.ids))
# win <- rep(0, length(home.ids))
#
# for (i in 1:length(home.ids)) {
#     id <- home.ids[i]
#     game <- pbp.19[pbp.19$game_id == id,]    # <-- CHANGE PLAY-BY-PLAY DATA
#     goalies <- as.character(na.omit(game$home_goalie))
#     goalies <- goalies[goalies != lag(goalies, default = "")]
#     h.team[i] <- game$home_team[1]
#     h.starter[i] <- goalies[1]
#     h.backup[i] <- goalies[2]
#     backup.events <- game[game$home_goalie == h.backup[i] & !is.na(game$home_goalie),]
#     start.time[i] <- backup.events$game_seconds[1]
#     score.start[i] <- backup.events$home_score[1]
#     opp.score.start[i] <- backup.events$away_score[1]
#     backup.shots[i] <- sum(backup.events$event_type %in% st.shot_events &
#                                backup.events$event_team != backup.events$home_team &
#                                backup.events$game_period <= 4)
#     backup.goals[i] <- sum(backup.events$event_type == "GOAL" &
#                                backup.events$event_team != backup.events$home_team &
#                                backup.events$game_period <= 4)
#     svp[i] <- 1 - (backup.goals[i]/max(1, backup.shots[i]))
#     score.end[i] <- game$home_score[max(which(game$game_period <= 4))]
#     opp.score.end[i] <- game$away_score[max(which(game$game_period <= 4))]
#     win[i] <- game$home_score[nrow(game)] > game$away_score[nrow(game)]
# }
#
# home.changes <- data.frame(id = home.ids,
#                            team = h.team,
#                            starter = h.starter,
#                            backup = h.backup,
#                            change.time = start.time,
#                            change.score = score.start,
#                            change.opp.score = opp.score.start,
#                            backup.shots = backup.shots,
#                            backup.goals = backup.goals,
#                            svp = svp,
#                            final.score = score.end,
#                            final.opp.score = opp.score.end,
#                            win = win)
#
# a.team <- as.character(rep(0, length(away.ids)))
# a.starter <- as.character(rep(0, length(away.ids)))
# a.backup <- as.character(rep(0, length(away.ids)))
# start.time <- rep(0, length(away.ids))
# score.start <- rep(0, length(away.ids))
# opp.score.start <- rep(0, length(away.ids))
# backup.shots <- rep(0, length(away.ids))
# backup.goals <- rep(0, length(away.ids))
# svp <- rep(0, length(away.ids))
# score.end <- rep(0, length(away.ids))
# opp.score.end <- rep(0, length(away.ids))
# win <- rep(0, length(away.ids))
#
# for (i in 1:length(away.ids)) {
#     id <- away.ids[i]
#     game <- pbp.19[pbp.19$game_id == id,]    # <-- CHANGE PLAY-BY-PLAY DATA
#     goalies <- as.character(na.omit(game$away_goalie))
#     goalies <- goalies[goalies != lag(goalies, default = "")]
#     a.team[i] <- game$away_team[1]
#     a.starter[i] <- goalies[1]
#     a.backup[i] <- goalies[2]
#     backup.events <- game[game$away_goalie == a.backup[i] & !is.na(game$away_goalie),]
#     start.time[i] <- backup.events$game_seconds[1]
#     score.start[i] <- backup.events$away_score[1]
#     opp.score.start[i] <- backup.events$home_score[1]
#     backup.shots[i] <- sum(backup.events$event_type %in% st.shot_events &
#                                backup.events$event_team != backup.events$away_team &
#                                backup.events$game_period <= 4)
#     backup.goals[i] <- sum(backup.events$event_type == "GOAL" &
#                                backup.events$event_team != backup.events$away_team &
#                                backup.events$game_period <= 4)
#     svp[i] <- 1 - (backup.goals[i]/max(1, backup.shots[i]))
#     score.end[i] <- game$away_score[max(which(game$game_period <= 4))]
#     opp.score.end[i] <- game$home_score[max(which(game$game_period <= 4))]
#     win[i] <- game$away_score[nrow(game)] > game$home_score[nrow(game)]
# }
#
# away.changes <- data.frame(id = away.ids,
#                            team = a.team,
#                            starter = a.starter,
#                            backup = a.backup,
#                            change.time = start.time,
#                            change.score = score.start,
#                            change.opp.score = opp.score.start,
#                            backup.shots = backup.shots,
#                            backup.goals = backup.goals,
#                            svp = svp,
#                            final.score = score.end,
#                            final.opp.score = opp.score.end,
#                            win = win)
#
# all.changes.19 <- rbind(home.changes, away.changes)    # <-- CHANGE DATA FRAME NAME
#
# # combine all seasons into 1 data frame
#
# all.changes <- rbind(all.changes.14,
#                      all.changes.15,
#                      all.changes.16,
#                      all.changes.17,
#                      all.changes.18,
#                      all.changes.19)
#
# all.changes.recent <- rbind(all.changes.18, all.changes.19)
#
# reliever <- unique(all.changes$backup)
# appearances <- rep(0, length(reliever))
# reg.minutes <- rep(0, length(reliever))
# svp <- rep(0, length(reliever))
# mean.dscore.start <- rep(0, length(reliever))
# med.dscore.start <- rep(0, length(reliever))
# mean.dscore.end <- rep(0, length(reliever))
# med.dscore.end <- rep(0, length(reliever))
# win.rate <- rep(0, length(reliever))
#
# for (i in 1:length(reliever)) {
#     g <- reliever[i]
#     relief.apps <- all.changes[all.changes$backup == g,]
#     appearances[i] <- nrow(relief.apps)
#     reg.minutes[i] <- sum(pmax(0, 3600 - relief.apps$change.time))/60
#     svp[i] <- 1 - (sum(relief.apps$backup.goals)/max(1, sum(relief.apps$backup.shots)))
#     mean.dscore.start[i] <- mean(relief.apps$change.score - relief.apps$change.opp.score)
#     med.dscore.start[i] <- median(relief.apps$change.score - relief.apps$change.opp.score)
#     mean.dscore.end[i] <- mean(relief.apps$final.score - relief.apps$final.opp.score)
#     med.dscore.end[i] <- median(relief.apps$final.score - relief.apps$final.opp.score)
#     win.rate[i] <- mean(relief.apps$win)
# }
#
# backups <- data.frame(goalie = reliever,
#                       appearances = appearances,
#                       reg.minutes = reg.minutes,
#                       f.appearances = as.factor(appearances),
#                       svp = svp,
#                       mean.dscore.start = mean.dscore.start,
#                       med.dscore.start = med.dscore.start,
#                       mean.dscore.end = mean.dscore.end,
#                       med.dscore.end = med.dscore.end,
#                       win.rate = win.rate)
ggplot(subset(backups, svp >= 0.75 & win.rate < 1),
aes(x = svp, y = win.rate, size = reg.minutes, color = f.appearances, label = goalie)) +
geom_point() +
geom_label_repel(size = 2) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Save Percentage",
y = "Winning Percentage",
title = "Relief Performance",
subtitle = "2014-15 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
ggplot(subset(backups, svp >= 0.75 & win.rate < 1),
aes(x = mean.dscore.start, y = mean.dscore.end, size = reg.minutes, color = f.appearances, label = goalie)) +
geom_point() +
geom_label_repel(size = 2) +
geom_abline(slope = 1, intercept = 0, size = 1.1) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Mean Score Differential (Start)",
y = "Mean Score Differential (End)",
title = "Change in Score Differential",
subtitle = "2014-15 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
ggplot(subset(backups.recent, svp >= 0.75 & win.rate < 1),
aes(x = svp, y = win.rate, size = reg.minutes, color = f.appearances, label = goalie)) +
geom_point() +
geom_label_repel(size = 2) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Save Percentage",
y = "Winning Percentage",
title = "Relief Performance",
subtitle = "2018-19 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
ggplot(subset(backups.recent, svp >= 0.75 & win.rate < 1),
aes(x = mean.dscore.start, y = mean.dscore.end, size = reg.minutes, color = f.appearances, label = goalie)) +
geom_point() +
geom_label_repel(size = 2) +
geom_abline(slope = 1, intercept = 0, size = 1.1) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Mean Score Differential (Start)",
y = "Mean Score Differential (End)",
title = "Change in Score Differential",
subtitle = "2018-19 Through 2019-20",
size = "Relief Minutes (Regulation)") +
scale_color_viridis_d() +
guides(color = FALSE)
setwd("../")
blogdown::serve_site()
set("./website")
setwd("./website")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
# NHL Faceoff PageRank
# Evolving-Hockey Data Scraper Dependencies
library(RCurl)
library(xml2)
library(rvest)
library(jsonlite)
library(foreach)
library(lubridate)
library(teamcolors)
library(survival)
library(survminer)
library(knitr)
library(gtsummary)
library(kableExtra)
library(MASS)
library(fitdistrplus)
library(pscl)
library(lmtest)
library(ggrepel)
library(igraph)
library(tidyverse)
# Scraping Function
#devtools::source_url("https://raw.githubusercontent.com/evolvingwild/evolving-hockey/master/EH_scrape_functions.R")
pbp.15 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1415_PBP.csv", stringsAsFactors = FALSE)
pbp.16 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1516_PBP.csv", stringsAsFactors = FALSE)
pbp.17 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1617_PBP.csv", stringsAsFactors = FALSE)
pbp.18 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1718_PBP.csv", stringsAsFactors = FALSE)
pbp.19 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1819_PBP.csv", stringsAsFactors = FALSE)
pbp.20 <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/1920_PBP.csv", stringsAsFactors = FALSE)
faceoff.pct <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/nhl_faceoffs.csv", stringsAsFactors = FALSE)
faceoffs.15 <- subset(pbp.15, event_type == "FAC")
faceoffs.16 <- subset(pbp.16, event_type == "FAC")
faceoffs.17 <- subset(pbp.17, event_type == "FAC")
faceoffs.18 <- subset(pbp.18, event_type == "FAC")
faceoffs.19 <- subset(pbp.19, event_type == "FAC")
faceoffs.20 <- subset(pbp.20, event_type == "FAC")
faceoff.events <- rbind(faceoffs.15, faceoffs.16, faceoffs.17,
faceoffs.18, faceoffs.19, faceoffs.20)
faceoff.winner <- ifelse(faceoff.events$event_team == faceoff.events$home_team,
faceoff.events$event_player_2,
faceoff.events$event_player_1)
faceoff.loser <- ifelse(faceoff.events$event_team == faceoff.events$home_team,
faceoff.events$event_player_1,
faceoff.events$event_player_2)
faceoff.players <- unique(c(faceoff.winner, faceoff.loser))
n <- length(faceoff.players)
f.count <- rep(0, n)
for (k in 1:length(faceoff.winner)) {
i <- which(faceoff.players == faceoff.loser[k])
j <- which(faceoff.players == faceoff.winner[k])
f.count[i] <- f.count[i] + 1
f.count[j] <- f.count[j] + 1
}
faceoff.players <- faceoff.players[f.count >= 2000]
n <- length(faceoff.players)
f.cond <- faceoff.winner %in% faceoff.players & faceoff.loser %in% faceoff.players
faceoff.winner <- faceoff.winner[f.cond]
faceoff.loser <- faceoff.loser[f.cond]
g <- data.frame(loser = faceoff.loser, winner = faceoff.winner)
faceoff.graph <- graph.data.frame(g)
p <- page.rank(faceoff.graph)$vector
PR <- p[faceoff.pct$player]
faceoff.pct <- cbind(faceoff.pct, PR)
team.colors <- read.csv("C:/Users/fereri/Documents/NHL Timeout Value/Faceoffs/team_colors.csv", stringsAsFactors = FALSE)
p.color <- team.colors$color1
s.color <- team.colors$color2
names(p.color) <- team.colors$team
names(s.color) <- team.colors$team
label.text <- as.character(rep(0, nrow(faceoff.pct)))
label.bg <- as.character(rep(0, nrow(faceoff.pct)))
for (i in 1:nrow(faceoff.pct)) {
label.text[i] <- s.color[faceoff.pct$team[i]]
label.bg[i] <- p.color[faceoff.pct$team[i]]
}
ggplot(faceoff.pct, aes(x = win.rate, y = PR, color = team, label = player)) +
geom_point(alpha = 0.3, color = label.bg) +
geom_label_repel(color = label.text, fill = label.bg,
size = 3, fontface = 'bold', segment.color = "black", max.overlaps = 10) +
theme_bw() +
theme(plot.title = element_text(size = 16, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title = element_text(size = 14)) +
labs(x = "Faceoff Win Percentage",
y = "PageRank",
title = "Faceoff PageRank",
subtitle = "2014-15 Through 2019-20",
caption = "Min. 2000 faceoffs taken")
faceoff.events <- rbind(faceoffs.15, faceoffs.16, faceoffs.17,
faceoffs.18, faceoffs.19, faceoffs.20)
faceoff.winner <- ifelse(faceoff.events$event_team == faceoff.events$home_team,
faceoff.events$event_player_2,
faceoff.events$event_player_1)
faceoff.loser <- ifelse(faceoff.events$event_team == faceoff.events$home_team,
faceoff.events$event_player_1,
faceoff.events$event_player_2)
faceoff.players <- unique(c(faceoff.winner, faceoff.loser))
n <- length(faceoff.players)
f.count <- rep(0, n)
for (k in 1:length(faceoff.winner)) {
i <- which(faceoff.players == faceoff.loser[k])
j <- which(faceoff.players == faceoff.winner[k])
f.count[i] <- f.count[i] + 1
f.count[j] <- f.count[j] + 1
}
length(f.count)
sum(f.count >= 2000)
f.cutoffs <- seq(0, 2500, by = 100)
f.counts <- rep(0, length(f.cutoffs))
for (in in 1:length(f.cutoffs)) {
for (i in 1:length(f.cutoffs)) {
f.counts[i] <- sum(f.count >= f.cutoffs[i])
}
f.counts
plot(f.counts)
plot(f.counts, lty = 1)
plot(f.counts, lty = 2)
lines(f.counts)
31*4
f.counts
plot.igraph(faceoff.graph)
echo "# website" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/ianferer/website.git
git push -u origin main
